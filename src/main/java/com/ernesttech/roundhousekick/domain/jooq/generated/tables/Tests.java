/**
 * This class is generated by jOOQ
 */
package com.ernesttech.roundhousekick.domain.jooq.generated.tables;


import com.ernesttech.roundhousekick.domain.jooq.generated.Keys;
import com.ernesttech.roundhousekick.domain.jooq.generated.Public;
import com.ernesttech.roundhousekick.domain.jooq.generated.tables.records.TestsRecord;
import org.jooq.*;
import org.jooq.impl.TableImpl;

import javax.annotation.Generated;
import java.util.Arrays;
import java.util.List;
import java.util.UUID;


/**
 * This class is generated by jOOQ.
 */
@Generated(
        value = {
                "http://www.jooq.org",
                "jOOQ version:3.8.3"
        },
        comments = "This class is generated by jOOQ"
)
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class Tests extends TableImpl<TestsRecord> {

    private static final long serialVersionUID = 565590253;

    /**
     * The reference instance of <code>public.tests</code>
     */
    public static final Tests TESTS = new Tests();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TestsRecord> getRecordType() {
        return TestsRecord.class;
    }

    /**
     * The column <code>public.tests.id</code>.
     */
    public final TableField<TestsRecord, UUID> ID = createField("id", org.jooq.impl.SQLDataType.UUID.nullable(false), this, "");

    /**
     * The column <code>public.tests.name</code>.
     */
    public final TableField<TestsRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.tests.test</code>.
     */
    public final TableField<TestsRecord, String> TEST = createField("test", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.tests.expected</code>.
     */
    public final TableField<TestsRecord, String> EXPECTED = createField("expected", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.tests.failure_message</code>.
     */
    public final TableField<TestsRecord, String> FAILURE_MESSAGE = createField("failure_message", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.tests.test_set</code>.
     */
    public final TableField<TestsRecord, String> TEST_SET = createField("test_set", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * Create a <code>public.tests</code> table reference
     */
    public Tests() {
        this("tests", null);
    }

    /**
     * Create an aliased <code>public.tests</code> table reference
     */
    public Tests(String alias) {
        this(alias, TESTS);
    }

    private Tests(String alias, Table<TestsRecord> aliased) {
        this(alias, aliased, null);
    }

    private Tests(String alias, Table<TestsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TestsRecord> getPrimaryKey() {
        return Keys.PK_TESTS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TestsRecord>> getKeys() {
        return Arrays.<UniqueKey<TestsRecord>>asList(Keys.PK_TESTS);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Tests as(String alias) {
        return new Tests(alias, this);
    }

    /**
     * Rename this table
     */
    public Tests rename(String name) {
        return new Tests(name, null);
    }
}
